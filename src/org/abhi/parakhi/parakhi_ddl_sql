



use parakhi;

////-------MYPROJECTS

drop table myprojects;
create table myprojects(
project_id INT,
project_name VARCHAR(100),
project_desc VARCHAR(500));

insert into myprojects values(100,"Ad Monetization","Ad campaigns revenue and effectiveness measured");
insert into myprojects values(101,"Native App","Application sessions and clicks browsing");




////-------MYTESTS

create table mytests(
case_id INT,
project_id INT,
project_name VARCHAR(100),
case_name VARCHAR(100),
case_desc VARCHAR(500),
case_query VARCHAR(500),
case_author VARCHAR(50));


truncate table mytests;

insert into mytests values(1,0,"Generic","Check for Null or blank","Check for null or blank in column values of datatype String","select $tableA.$cols from $db.$tableA where $tableA.$col1 is NULL or $tableA.$col2 = [quot][quot]","admin");
insert into mytests values(2,0,"Generic","Check for Non Numeric value","Check for non-numeric values(characters/symbols) in column values of datatype String","select $tableA.$cols from $db.$tableA where $tableA.$col1 REGEXP [quot][^0-9][quot]","admin");
insert into mytests values(3,0,"Generic","Check for Date format","Check for date formats in column values of datatype String/Date","select $cols from $table WHERE $col not like $dateFormat","admin");
insert into mytests values(4,0,"Generic","Source minus Target","Check missing values in Target from Source","Select left.$cols1 from (Select DISTINCT $tableA.$col1 from $db.$tableA )left LEFT OUTER JOIN (Select DISTINCT $tableB.$col2 from $db.$tableB )right ON left.$col1=right.$col2 WHERE right.$col2 IS NULL","admin");
insert into mytests values(5,0,"Generic","Check for Distinct lengths","Check for multiple length values in a column whose length should be fixed","Select DISTINCT length($col) from $table","admin");
insert into mytests values(6,0,"Generic","Check for duplicate records","Check for full duplicated rows","select $tableA.$cols , count(*) as cnt from $db.$tableA GROUP BY $tableA.$cols HAVING cnt > 1","admin");
insert into mytests values(7,0,"Generic","Check for leading/trailing spaces","Check for leading/trailing spaces in string","select $tableA.$cols from $db.$tableA where $tableA.$col1 like [quot] %[quot] OR $tableA.$col2 like [quot]% [quot]","admin");
insert into mytests values(8,0,"Generic","Check for multiple space characters within the string","Check for multiple space characters within the string. This issue may cause joins to fail on such columns.","select $tableA.$cols from $db.$tableA where $tableA.$col1 like [quot]%  %[quot]","admin");
insert into mytests values(9,0,"Generic","Check for non Uppercase values","Check for non Uppercase values in string","select $tableA.$cols from $db.$tableA where $tableA.$col1 not rlike [quot][A-Z][quot]","admin");
insert into mytests values(10,0,"Generic","Check for non Lowercase values","Check for non Lowercase values in string","select $tableA.$cols from $db.$tableA where $tableA.$col1 not rlike [quot][a-z][quot]","admin");


|       51 |        100 | Ad Monetization | Order_id should be null for STORE transactions and vice-versa   | Order_id should be null for STORE transactions and vice-versa                        | SELECT distinct order_id FROM db_insight.insight_monetization_all_transaction WHERE channel=[quot]Store[quot]                                                                                                                                        | monet_user  |
|       52 |        100 | Ad Monetization | Check customer_atg_id junk/null/blank                           | Check customer_atg_id junk/null/blank                                                | select distinct(length(customer_atg_id)) from db_insight.insight_monetization_all_transaction                                                                                                                                                        | monet_user  |
|       53 |        100 | Ad Monetization | Distinct channel                                                | Distinct channel                                                                     | select count(*),channel from db_insight.insight_monetization_all_transaction group by channel                                                                                                                                                        | monet_user  |
|       54 |        100 | Ad Monetization | Check if advertiser_id is populated after DFP join is suceesful | Check if advertiser_id is populated after DFP join is suceesful                      | select distinct brand_id,ei_vnd_id,dfp_brand_nm,dfp_vendor_nm,dfp_advertiser_id from db_insight.insight_monetization_all_transaction where dfp_advertiser_id IS NULL AND (length(dfp_brand_nm)>0 OR length(dfp_vendor_nm)>0 )                        | monet_user  |
|       55 |        100 | Ad Monetization | Master persona grouping  level duplicates                       | Master persona grouping  level duplicates                                            | select master_persona_key,trans_date,count(*) as c from db_insight.insight_monetization_all_transaction where trans_date>=[quot]2016-04-19[quot] and trans_date <= [quot]2016-04-19[quot] group by master_persona_key,trans_date having c>1 LIMIT 10 | monet_user  |

////-------MYTABLES

drop table mytables;
create table mytables(
project_id INT,
src_db_nm VARCHAR(100),
src_tbl_nm VARCHAR(200),
src_col_nm VARCHAR(200),
tgt_db_nm VARCHAR(200),
tgt_tbl_nm VARCHAR(200),
tgt_col_nm VARCHAR(200));



////-------MYSTMS
drop table mystmdata;
create table mystmdata(
project_id INT,
stm_id VARCHAR(200),
stm_nm VARCHAR(300),
stm_version VARCHAR(50),
serial_no VARCHAR(10),
source_db_nm VARCHAR(100),
source_tbl_nm VARCHAR(200),
source_col_nm VARCHAR(200),
source_data_typ VARCHAR(100),
transformation VARCHAR(400),
target_db_nm VARCHAR(100),
target_tbl_nm VARCHAR(200),
target_col_nm VARCHAR(200),
target_data_typ VARCHAR(100),
comment VARCHAR(300));


insert into mystms values(100,'test','db_insight.insight_monetization_all_transaction','1.0','1','db_gold','gold_cust_sales_trans_dtls','demand_dt','String','Direct Mapping','db_insight','insight_monetization_all_transaction','Trans_Date','String','Demand_date format is yyyy-mm-dd');
insert into mystms values(100,'test','db_insight.insight_monetization_all_transaction','1.0','2','db_gold','gold_dfp_denorm','advertiser_id','int','Direct Mapping','db_insight','insight_monetization_all_transaction','dfp_advertiser_ID','int','Max (advertiser_iD) based on DFP_vendor_nm link');
insert into mystms values(100,'test','db_insight.insight_monetization_all_transaction','1.0','3','db_gold','gold_dfp_denorm','company_name','String','Direct Mapping','db_insight','insight_monetization_all_transaction','dfp_advertiser_nm','String','Advertiser_nm associated with Advertiser_id');
insert into mystms values(100,'1o38ctGSfl3tm2_MnIbK4GxhDpJRl5lsFz4TkcfWFu8A','db_gold.gold_product_sku','1.0','10','db_stage','raw_product','p','string','FLATTEN(p)','db_gold','gold_product_sku','p4','string','dummy comment');
insert into mystms values(100,'1o38ctGSfl3tm2_MnIbK4GxhDpJRl5lsFz4TkcfWFu8A','db_gold.gold_product_sku','1.0','5','db_stage','raw_product','gender','string','Direct Mapping','db_gold','gold_product_sku','gender','string','dummy comment');



////-------MYSTMSHEETS

create table mystmsheets(
project_id INT,
project_name VARCHAR(100),
stm_sheet_id VARCHAR(100),
stm_sheet_title VARCHAR(200),
stm_sheet_url VARCHAR(300));

insert into mystmsheets values(100,"Ad Monetization","1o38ctGSfl3tm2_MnIbK4GxhDpJRl5lsFz4TkcfWFu8A","My sample STM for Parakhi","https://docs.google.com/spreadsheets/d/1o38ctGSfl3tm2_MnIbK4GxhDpJRl5lsFz4TkcfWFu8A/edit#gid=29414504");






////-------MYTESTSHEETS

create table mytestsheets(
project_id INT,
project_name VARCHAR(100),
test_sheet_id VARCHAR(100),
test_sheet_title VARCHAR(200),
test_sheet_url VARCHAR(300));

insert into mytestsheets values(100,"Ad Monetization","16Fy4uF1MVpAkoW-ads6XabQnuOK2HJQ63mn7FUnNjkE","My sample Test Sheet","https://docs.google.com/spreadsheets/d/16Fy4uF1MVpAkoW-ads6XabQnuOK2HJQ63mn7FUnNjkE/edit#gid=247511847");





////-------MYTASKS

create table mytasks(
task_id INT,
progress INT);



insert into mytasks values(110886,0);